<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Default values for common controls -->
    <!-- Buttons -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="80" />
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="SmallSquareButton">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Button80">
        <Setter Property="Width" Value="80" />
    </Style>

    <!-- Textblock -->
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <!-- Textblock LED Label -->
    <Style TargetType="{x:Type TextBlock}" x:Key="LEDLabel">
        <Setter Property="Foreground" Value="#FFFF0101" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="#FF420101" />
        <Setter Property="Padding" Value="4,2" />
    </Style>

    <!-- Textblock LED DataValue -->
    <Style TargetType="{x:Type TextBlock}" x:Key="LEDValue">
        <Setter Property="Foreground" Value="#FFFF0101" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="#FF840101" />
        <Setter Property="Padding" Value="4,2"/>
        <Setter Property="MinWidth" Value="80" />
    </Style>

    <!-- Textboxes -->
    <Style TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="ValueEntryTextBox">
        <Setter Property="Height" Value="22" />
        <Setter Property="MinWidth" Value="80" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxTiny">
        <Setter Property="Height" Value="22" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="30" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxShort">
        <Setter Property="Height" Value="22" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="80" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxLong">
        <Setter Property="Height" Value="22" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="200" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- Checkbox -->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <!-- Radiobutton -->
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <!-- Hyperlink like button -->
    <Style x:Key="HyperlinkLikeButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <ControlTemplate.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="TextDecorations" Value="Underline" />
                                </Style>
                            </ControlTemplate.Resources>
                            <ContentPresenter />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Group box -->
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="#FFA41515"/>
        <Setter Property="Foreground" Value="#FFA46A15" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Margin" Value="0,0,0,5" />
    </Style>

    <!-- Window -->
    <Style TargetType="{x:Type Window}">
        <Setter Property="Icon" Value="pack://application:,,,/Lunatic.TelescopeControl;component/Skins/Images/LunaticMoon.ico" />
        <Setter Property="Background" Value="Black" />
    </Style>

    <!-- Dialog box (Window) -->
    <Style TargetType="{x:Type Window}" x:Key="DialogStyle">
        <Setter Property="Icon" Value="pack://application:,,,/Lunatic.TelescopeControl;component/Skins/Images/LunaticMoon.ico" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="WindowStyle" Value="SingleBorderWindow" />
        <Setter Property="ShowInTaskbar" Value="False" />
    </Style>

    <!-- Dialog box (Window) -->
    <!--
        <Setter Property="ShowInTaskbar" Value="False" />
    -->
    <Style TargetType="{x:Type Window}" x:Key="PropertyDialogStyle">
        <Setter Property="Icon" Value="pack://application:,,,/Lunatic.TelescopeControl;component/Skins/Images/LunaticMoon.ico" />
        <Setter Property="Background" Value="Black" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="WindowStyle" Value="SingleBorderWindow" />
    </Style>


</ResourceDictionary>